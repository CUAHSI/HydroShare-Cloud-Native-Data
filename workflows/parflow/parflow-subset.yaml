apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: parflow-subset-v1-
  namespace: argo
spec:
  entrypoint: parflow-subset-v1
  templateDefaults:
    timeout: 600s  
    retryStrategy:
      limit: "2"

  # Parameters can be passed/overridden via the argo CLI.
  # To override the printed message, run `argo submit` with the -p option:
  # $ argo submit examples/arguments-parameters.yaml -p message="goodbye world"
  arguments:
    # there must be better way of defining multiple parameters
    # but I can't find documentation for it.
    parameters:
    - name: pfinput
      value: /srv/input
    - name: shape
      value: /srv/output/watershed.shp
    - name: output
      value: /srv/output
    - name: label
      value: pf-subset-job
    - name: job-id
      value: abc123
#    - name: cpu-limit
#      value: 1
#    - name: mem-limit
#      value: "2Gi"
#    - name: hdd-limit
#      value: "2Gi"
## We should be able to use podSpecPatch to manage resources because we cannot use parameters in the container.resources section.
#  podSpecPatch: |
#    containers:
#      - name: main
#        resources:
#          limits:
#            memory: "{{workflow.parameters.mem-limit}}"
#            cpu: "{{workflow.parameters.cpu-limit}}"
#            ephemeral-storage: "{{workflow.parameters.hdd-limit}}"
  templates:
  - name: parflow-subset-v1
    inputs:
      parameters:
        - name: pfinput
        - name: shape
        - name: output
        - name: label
        - name: job-id
      artifacts:
        - name: pfinput-data
          path: /srv/input
          gcs:
            bucket: subsetter-static-input
            key: pfconus.v1.0
            serviceAccountKeySecret:
              name: my-gcs-creds
              key: serviceAccountKey
        - name: pfoutput-data
          path: /srv/output
          gcs:
            bucket: subsetter-outputs
            key: "{{inputs.parameters.job-id}}"
            serviceAccountKeySecret:
              name: my-gcs-creds
              key: serviceAccountKey
    container:
      image: cuahsi/parflow-subset-argo:v1
      resources:
        requests:
          memory: "1Gi"
          cpu: 1
          ephemeral-storage: "1Gi"
        limits:
          memory: "1Gi"
          cpu: 2
          ephemeral-storage: "2Gi"
      command: ["python", "-u", "entry.py"]
      args: ["{{inputs.parameters.label}}",
             "{{inputs.parameters.shape}}",
             "{{inputs.parameters.pfinput}}",
             "{{inputs.parameters.output}}"]
    outputs:
      artifacts:
        - name: subset-results
          path: /srv/output
          gcs:
            bucket: subsetter-outputs
            key: "{{inputs.parameters.job-id}}/{{inputs.parameters.label}}.gz"
            serviceAccountKeySecret:
              name: my-gcs-creds
              key: serviceAccountKey
