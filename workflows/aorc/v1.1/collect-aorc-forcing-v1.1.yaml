metadata:
  name: collect-aorc-forcing-v1.1
  namespace: workflows
  uid: 7a3c73aa-b714-4a50-b42c-952be475f0d2
  resourceVersion: '356961596'
  generation: 4
  creationTimestamp: '2023-11-30T16:46:48Z'
  labels:
    workflows.argoproj.io/creator: '116317613255759624565'
  managedFields:
    - manager: argo
      operation: Update
      apiVersion: argoproj.io/v1alpha1
      time: '2023-12-21T18:30:39Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:workflows.argoproj.io/creator: {}
        f:spec: {}
spec:
  templates:
    - name: collect-aorc
      inputs:
        parameters:
          - name: shape-file-path
            value: '{{workflow.parameters.shape-file-path}}'
          - name: output-bucket
            value: '{{workflow.parameters.output_bucket}}'
          - name: output-path
            value: '{{workflow.parameters.output_path}}'
          - name: start-date
            value: '{{workflow.parameters.start-date}}'
          - name: end-date
            value: '{{workflow.parameters.end-date}}'
          - name: aorc-secret
            value: '{{workflow.parameters.aorc-secret}}'
        artifacts:
          - name: shapefile-input
            path: /output
            s3:
              endpoint: api.minio.cuahsi.io
              bucket: subsetter-outputs
              accessKeySecret:
                name: minio-credentials
                key: accessKey
              secretKeySecret:
                name: minio-credentials
                key: secretKey
              key: '{{inputs.parameters.shape-file-path}}'
      outputs:
        artifacts:
          - name: aorc-output-artifact
            path: /output
            s3:
              endpoint: api.minio.cuahsi.io
              bucket: '{{inputs.parameters.output-bucket}}'
              accessKeySecret:
                name: minio-credentials
                key: accessKey
              secretKeySecret:
                name: minio-credentials
                key: secretKey
              key: '{{inputs.parameters.output-path}}'
            archive:
              none: {}
      metadata: {}
      container:
        name: ''
        image: us-central1-docker.pkg.dev/apps-320517/subsetter/aorc:0.0.2
        command:
          - /bin/sh
          - '-c'
        args:
          - python /app/collect-aorc-forcing-v1.1.py
        ports:
          - containerPort: 8787
        env:
          - name: KEY
            value: AKIATL6IACWUADAFYDMC
          - name: SECRET
            value: '{{inputs.parameters.aorc-secret}}'
          - name: BUCKET_URL
            value: s3://aorc-v1.1-zarr-1-year/
          - name: SHAPE_FILE
            value: /output/watershed.shp
          - name: START_DATE
            value: '{{inputs.parameters.start-date}}'
          - name: END_DATE
            value: '{{inputs.parameters.end-date}}'
          - name: OUTPUT_FILE
            value: /output/results.nc
          - name: N_WORKERS
            value: '2'
          - name: MEMORY_LIMIT
            value: 4GB
        resources:
          requests:
            cpu: '2'
            ephemeral-storage: 10Gi
            memory: 16Gi
  entrypoint: collect-aorc
  arguments:
    parameters:
      - name: start-date
        value: '2020-01-01'
      - name: end-date
        value: '2020-01-10'
      - name: output_bucket
        value: subsetter-outputs
      - name: output_path
        value: acastronova/wb-2917533/forcing
      - name: shape-file-path
        value: acastronova/wb-2917533/domain/watershed.gz
      - name: aorc-secret
        value: [MY-BUCKET-SECRET-TOKEN]
  templateDefaults:
    inputs: {}
    outputs: {}
    metadata: {}
    retryStrategy:
      limit: '0'
    timeout: 600s
